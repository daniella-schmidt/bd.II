@model List<EFTest.Models.StudentsCourses>
@{
    ViewData["Title"] = "Nova Matrícula";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-graduation-cap me-2"></i>
                        Nova Matrícula
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="matriculaForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <!-- Estudante -->
                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-user me-1"></i>
                                Estudante
                            </label>
                            @{
                                var studentList = ViewData["StudentId"] as SelectList;
                            }

                            @if (studentList != null && studentList.Any())
                            {
                                <select name="studentId" asp-items="studentList" class="form-select form-select-lg" id="studentSelect" required>
                                    <option value="">Selecione um estudante</option>
                                </select>
                                <span class="text-danger small" id="studentError"></span>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    Nenhum estudante cadastrado. <a asp-controller="Home" asp-action="Create">Cadastrar estudante</a>
                                </div>
                            }
                        </div>

                        <!-- Cursos -->
                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-book me-1"></i>
                                Cursos Disponíveis
                            </label>

                            @{
                                var coursesList = ViewData["CoursesList"] as List<EFTest.Models.Course>;
                            }

                            @if (coursesList != null && coursesList.Any())
                            {
                                <div class="border rounded p-3 bg-light">
                                    <div class="mb-2">
                                        <button type="button" class="btn btn-sm btn-outline-primary" id="selectAll">
                                            <i class="fas fa-check-square me-1"></i>Selecionar Todos
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-secondary" id="deselectAll">
                                            <i class="fas fa-times-circle me-1"></i>Desmarcar Todos
                                        </button>
                                    </div>

                                    <div style="max-height: 300px; overflow-y: auto;">
                                        @foreach (var course in coursesList)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input course-checkbox"
                                                       type="checkbox"
                                                       name="courseIds"
                                                       value="@course.Id"
                                                       id="course_@course.Id">
                                                <label class="form-check-label" for="course_@course.Id">
                                                    @course.Name
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <small class="text-muted">Selecione um ou mais cursos</small>
                                <span class="text-danger small" id="coursesError"></span>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    Nenhum curso cadastrado. <a asp-controller="Course" asp-action="Create">Cadastrar curso</a>
                                </div>
                            }
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg me-md-2">
                                <i class="fas fa-arrow-left me-1"></i>
                                Voltar
                            </a>
                            <button type="submit" class="btn btn-success btn-lg" id="submitBtn">
                                <i class="fas fa-check me-1"></i>
                                Matricular
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Selecionar todos
            $('#selectAll').click(function() {
                $('.course-checkbox').prop('checked', true);
                validateForm();
            });

            // Desmarcar todos
            $('#deselectAll').click(function() {
                $('.course-checkbox').prop('checked', false);
                validateForm();
            });

            // Validação em tempo real
            $('#studentSelect, .course-checkbox').on('change', function() {
                validateForm();
            });

            // Validação no submit
            $('#matriculaForm').on('submit', function(e) {
                if (!validateForm()) {
                    e.preventDefault();
                    alert('Por favor, corrija os erros antes de enviar.');
                }
            });

            function validateForm() {
                let isValid = true;
                const studentId = $('#studentSelect').val();
                const selectedCourses = $('.course-checkbox:checked').length;

                // Validar estudante
                if (!studentId) {
                    $('#studentSelect').addClass('is-invalid').removeClass('is-valid');
                    $('#studentError').text('Selecione um estudante.');
                    isValid = false;
                } else {
                    $('#studentSelect').addClass('is-valid').removeClass('is-invalid');
                    $('#studentError').text('');
                }

                // Validar cursos
                if (selectedCourses === 0) {
                    $('#coursesError').text('Selecione pelo menos um curso.');
                    isValid = false;
                } else {
                    $('#coursesError').text('');
                }

                // Habilitar/desabilitar botão
                $('#submitBtn').prop('disabled', !isValid);

                return isValid;
            }

            // Validar inicialmente
            validateForm();
        });
    </script>
}