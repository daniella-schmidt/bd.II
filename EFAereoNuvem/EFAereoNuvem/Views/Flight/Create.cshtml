@model EFAereoNuvem.Models.Flight

@{
    ViewData["Title"] = "Novo Voo";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="bi bi-airplane-fill"></i> Novo Voo</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="flightForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <!-- Dados Básicos do Voo -->
                        <h5 class="border-bottom pb-2 mb-3">Dados do Voo</h5>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="CodeFlight" class="form-label">Código do Voo *</label>
                                    <input asp-for="CodeFlight" class="form-control" placeholder="Ex: AA1234" maxlength="10" />
                                    <span asp-validation-for="CodeFlight" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="TypeFlight" class="form-label">Tipo de Voo *</label>
                                    <select asp-for="TypeFlight" class="form-select" asp-items="Html.GetEnumSelectList<EFAereoNuvem.Models.Enum.TypeFlight>()">
                                        <option value="">Selecione...</option>
                                    </select>
                                    <span asp-validation-for="TypeFlight" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="AirplaneId" class="form-label">Aeronave *</label>
                                    <select asp-for="AirplaneId" class="form-select" asp-items="ViewBag.Airplanes">
                                        <option value="">Selecione uma aeronave...</option>
                                    </select>
                                    <span asp-validation-for="AirplaneId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Origin" class="form-label">Origem *</label>
                                    <input asp-for="Origin" class="form-control" placeholder="Ex: São Paulo (GRU)" maxlength="50" />
                                    <span asp-validation-for="Origin" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Destination" class="form-label">Destino *</label>
                                    <input asp-for="Destination" class="form-control" placeholder="Ex: Rio de Janeiro (GIG)" maxlength="50" />
                                    <span asp-validation-for="Destination" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="DateFlight" class="form-label">Data do Voo *</label>
                                    <input asp-for="DateFlight" type="date" class="form-control" />
                                    <span asp-validation-for="DateFlight" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="Departure" class="form-label">Partida *</label>
                                    <input asp-for="Departure" type="time" class="form-control" />
                                    <span asp-validation-for="Departure" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="Arrival" class="form-label">Chegada *</label>
                                    <input asp-for="Arrival" type="time" class="form-control" />
                                    <span asp-validation-for="Arrival" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="Duration" class="form-label">Duração (h) *</label>
                                    <input asp-for="Duration" type="number" step="0.1" class="form-control" placeholder="Ex: 1.5" />
                                    <span asp-validation-for="Duration" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Escalas -->
                        <h5 class="border-bottom pb-2 mb-3">Escalas</h5>

                        <div class="mb-3 form-check form-switch">
                            <input asp-for="ExistScale" class="form-check-input" type="checkbox" id="existScale" />
                            <label class="form-check-label" for="existScale">Este voo possui escalas?</label>
                        </div>

                        <div id="scalesSection" style="display: none;">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i> Adicione as escalas do voo em ordem cronológica.
                            </div>

                            <div id="scalesContainer">
                                <!-- Escalas serão adicionadas dinamicamente aqui -->
                            </div>

                            <div class="mb-3">
                                <button type="button" class="btn btn-outline-primary btn-sm" id="addScale">
                                    <i class="bi bi-plus-circle"></i> Adicionar Escala
                                </button>
                            </div>
                        </div>

                        <!-- Botões -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                            <button type="submit" class="btn btn-primary">Cadastrar Voo</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Template para Escala -->
<template id="scaleTemplate">
    <div class="scale-item card mb-3">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Escala <span class="scale-number">1</span></h6>
            <button type="button" class="btn btn-sm btn-outline-danger remove-scale">
                <i class="bi bi-trash"></i>
            </button>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="form-label">Local *</label>
                        <input type="text" class="form-control scale-location" placeholder="Ex: Brasília (BSB)" maxlength="50" required />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="form-label">Chegada *</label>
                        <input type="time" class="form-control scale-arrival" required />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="form-label">Partida *</label>
                        <input type="time" class="form-control scale-departure" required />
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const existScaleCheckbox = document.getElementById('existScale');
            const scalesSection = document.getElementById('scalesSection');
            const scalesContainer = document.getElementById('scalesContainer');
            const addScaleButton = document.getElementById('addScale');
            const scaleTemplate = document.getElementById('scaleTemplate');
            const flightForm = document.getElementById('flightForm');

            let scaleCount = 0;

            // Mostrar/ocultar seção de escalas
            existScaleCheckbox.addEventListener('change', function() {
                scalesSection.style.display = this.checked ? 'block' : 'none';
                if (!this.checked) {
                    scalesContainer.innerHTML = '';
                    scaleCount = 0;
                }
            });

            // Adicionar escala
            addScaleButton.addEventListener('click', function() {
                scaleCount++;
                const scaleClone = scaleTemplate.content.cloneNode(true);
                const scaleItem = scaleClone.querySelector('.scale-item');
                const scaleNumber = scaleClone.querySelector('.scale-number');

                scaleNumber.textContent = scaleCount;
                scaleItem.dataset.scaleIndex = scaleCount;

                // Remover escala
                scaleClone.querySelector('.remove-scale').addEventListener('click', function() {
                    scaleItem.remove();
                    updateScaleNumbers();
                });

                scalesContainer.appendChild(scaleClone);
            });

            // Atualizar números das escalas
            function updateScaleNumbers() {
                const scaleItems = scalesContainer.querySelectorAll('.scale-item');
                scaleCount = scaleItems.length;
                scaleItems.forEach((item, index) => {
                    item.querySelector('.scale-number').textContent = index + 1;
                    item.dataset.scaleIndex = index + 1;
                });
            }

            // Processar formulário
            flightForm.addEventListener('submit', function(e) {
                if (existScaleCheckbox.checked) {
                    const scaleItems = scalesContainer.querySelectorAll('.scale-item');
                    const scales = [];

                    scaleItems.forEach((item, index) => {
                        const location = item.querySelector('.scale-location').value;
                        const arrival = item.querySelector('.scale-arrival').value;
                        const departure = item.querySelector('.scale-departure').value;

                        // Validar escala
                        if (!location || !arrival || !departure) {
                            e.preventDefault();
                            alert('Preencha todos os campos da escala ' + (index + 1));
                            return;
                        }

                        // Validar horários
                        if (arrival >= departure) {
                            e.preventDefault();
                            alert('A chegada deve ser anterior à partida na escala ' + (index + 1));
                            return;
                        }

                        scales.push({
                            location: location,
                            arrival: arrival,
                            departure: departure
                        });
                    });

                    // Adicionar escalas ao formulário
                    scales.forEach((scale, index) => {
                        const locationInput = document.createElement('input');
                        locationInput.type = 'hidden';
                        locationInput.name = `Scales[${index}].Location`;
                        locationInput.value = scale.location;
                        flightForm.appendChild(locationInput);

                        const arrivalInput = document.createElement('input');
                        arrivalInput.type = 'hidden';
                        arrivalInput.name = `Scales[${index}].Arrival`;
                        arrivalInput.value = scale.arrival;
                        flightForm.appendChild(arrivalInput);

                        const departureInput = document.createElement('input');
                        departureInput.type = 'hidden';
                        departureInput.name = `Scales[${index}].Departure`;
                        departureInput.value = scale.departure;
                        flightForm.appendChild(departureInput);
                    });
                }
            });

            // Definir data mínima
            var today = new Date().toISOString().split('T')[0];
            document.getElementById('DateFlight').min = today;
        });
    </script>
}